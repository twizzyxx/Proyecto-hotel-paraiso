Sistema de Reservas - Hotel Para√≠so
Descripci√≥n del Proyecto
Sistema web completo para la gesti√≥n de reservas de un hotel, desarrollado con HTML, CSS (Bootstrap 5) y JavaScript vanilla. Permite a los usuarios explorar habitaciones, realizar reservas y gestionar sus reservaciones de manera intuitiva.
Estructura del Proyecto
hotel-paraiso/
‚îÇ
‚îú‚îÄ‚îÄ index.html              # P√°gina principal
‚îú‚îÄ‚îÄ habitaciones.html       # Cat√°logo de habitaciones
‚îú‚îÄ‚îÄ reserva.html           # Formulario de reservas
‚îú‚îÄ‚îÄ reservas.html          # Gesti√≥n de reservas
‚îÇ
‚îú‚îÄ‚îÄ css/
‚îÇ   ‚îî‚îÄ‚îÄ estilos.css        # Estilos personalizados
‚îÇ
‚îú‚îÄ‚îÄ js/
‚îÇ   ‚îú‚îÄ‚îÄ reserva.js         # L√≥gica del formulario de reservas
‚îÇ   ‚îî‚îÄ‚îÄ reservas.js        # L√≥gica de gesti√≥n de reservas
‚îÇ
‚îî‚îÄ‚îÄ img/
    ‚îú‚îÄ‚îÄ logo.jpeg          # Logo del hotel
    ‚îú‚îÄ‚îÄ fachada.jpg        # Imagen de fachada
    ‚îú‚îÄ‚îÄ lobby.jpg          # Imagen del lobby
    ‚îú‚îÄ‚îÄ piscina.jpg        # Imagen de piscina
    ‚îî‚îÄ‚îÄ habitaciones/
        ‚îú‚îÄ‚îÄ simple.jpeg    # Imagen habitaci√≥n simple
        ‚îú‚îÄ‚îÄ intermedia.jpeg # Imagen habitaci√≥n doble
        ‚îî‚îÄ‚îÄ suit.jpeg      # Imagen suite
P√°ginas del Sistema
1. index.html - P√°gina Principal
Funcionalidad:
‚Ä¢	Carrusel autom√°tico con 3 im√°genes del hotel (fachada, lobby, piscina)
‚Ä¢	Presentaci√≥n del hotel con descripci√≥n principal
‚Ä¢	Secci√≥n de servicios destacados (Piscina, Restaurante, Parking)
‚Ä¢	Navegaci√≥n completa a todas las secciones
Elementos destacados:
‚Ä¢	Carrusel de Bootstrap con controles manuales e indicadores
‚Ä¢	Cards informativas con iconos emoji
‚Ä¢	Dise√±o responsive adaptable a m√≥viles
2. habitaciones.html - Cat√°logo de Habitaciones
Funcionalidad:
‚Ä¢	Muestra 3 tipos de habitaciones disponibles: 
o	Habitaci√≥n Simple: $50/noche, 1 persona
o	Habitaci√≥n Doble: $80/noche, 2 personas
o	Suite: $150/noche, 2-3 personas
‚Ä¢	Modales con informaci√≥n detallada de cada habitaci√≥n
‚Ä¢	Bot√≥n directo para reservar desde cada habitaci√≥n
Caracter√≠sticas de habitaciones:
‚Ä¢	Lista completa de amenidades (WiFi, TV, aire acondicionado, etc.)
‚Ä¢	Im√°genes representativas
‚Ä¢	Capacidad m√°xima de hu√©spedes
‚Ä¢	Botones de acci√≥n en los modales
3. reserva.html - Formulario de Reservas
Funcionalidad:
‚Ä¢	Formulario completo para crear nuevas reservas
‚Ä¢	C√°lculo autom√°tico del precio total
‚Ä¢	Validaci√≥n de fechas (no permite fechas pasadas)
‚Ä¢	Almacenamiento en localStorage
Campos del formulario:
‚Ä¢	Nombre completo (requerido)
‚Ä¢	Email (requerido)
‚Ä¢	Tel√©fono (requerido)
‚Ä¢	Tipo de habitaci√≥n (selector con precios)
‚Ä¢	Fecha de entrada/salida (validaci√≥n autom√°tica)
‚Ä¢	N√∫mero de hu√©spedes (1-5 personas)
‚Ä¢	Solicitudes especiales (opcional)
C√°lculo autom√°tico:
‚Ä¢	N√∫mero de noches entre fechas
‚Ä¢	Precio por noche seg√∫n tipo de habitaci√≥n
‚Ä¢	Total a pagar
‚Ä¢	Resumen visual de la reserva antes de confirmar
4. reservas.html - Gesti√≥n de Reservas
Funcionalidad:
‚Ä¢	Listado completo de todas las reservas
‚Ä¢	Filtros por estado (Todas, Pendientes, Confirmadas)
‚Ä¢	Acciones disponibles por reserva: 
o	‚úì Confirmar reserva (solo pendientes)
o	üëÅ Ver detalles completos
o	‚úï Cancelar reserva
Estados de reservas:
‚Ä¢	Pendiente (amarillo): Reserva reci√©n creada
‚Ä¢	Confirmada (verde): Reserva confirmada por el usuario
‚Ä¢	Cancelada (rojo): Reserva cancelada
Informaci√≥n mostrada:
‚Ä¢	ID √∫nico de reserva
‚Ä¢	Datos del hu√©sped
‚Ä¢	Tipo de habitaci√≥n
‚Ä¢	Fechas formateadas (DD/MM/AAAA)
‚Ä¢	N√∫mero de noches
‚Ä¢	Precio total
‚Ä¢	Estado actual
‚Ä¢	Botones de acci√≥n
Archivos JavaScript
reserva.js - L√≥gica del Formulario de Reservas
Funciones principales:
1.	Configuraci√≥n inicial:
o	Establece fecha m√≠nima como hoy para check-in y check-out
o	Previene selecci√≥n de fechas pasadas
2.	calcularResumen():
o	Calcula n√∫mero de noches entre fechas
o	Obtiene precio por noche del tipo de habitaci√≥n seleccionado
o	Calcula y muestra el precio total
o	Valida que check-out sea posterior a check-in
3.	Event Listeners:
o	checkIn.change: Actualiza fecha m√≠nima de check-out y recalcula resumen
o	checkOut.change: Recalcula resumen cuando cambia fecha de salida
o	tipoHabitacion.change: Recalcula resumen cuando cambia tipo de habitaci√≥n
4.	formReserva.submit:
o	Previene env√≠o tradicional del formulario
o	Crea objeto de reserva con todos los datos
o	Genera ID √∫nico usando timestamp
o	Valida fechas antes de guardar
o	Guarda en localStorage
o	Muestra confirmaci√≥n con detalles
o	Redirige a p√°gina de gesti√≥n de reservas
Estructura del objeto reserva:
{
    id: timestamp,
    nombre: string,
    email: string,
    telefono: string,
    tipoHabitacion: string,
    checkIn: date,
    checkOut: date,
    huespedes: number,
    solicitudes: string,
    noches: number,
    precioTotal: number,
    estado: 'pendiente',
    fechaCreacion: ISO string
}
reservas.js - L√≥gica de Gesti√≥n de Reservas
Variables globales:
‚Ä¢	reservasGlobales[]: Array con todas las reservas cargadas
‚Ä¢	filtroActual: Estado del filtro activo ('todas', 'pendiente', 'confirmada')
Funciones principales:
1.	cargarReservas():
o	Se ejecuta al cargar la p√°gina
o	Lee reservas desde localStorage
o	Parsea JSON y actualiza array global
o	Llama a mostrarReservas() para renderizar
2.	mostrarReservas(reservas):
o	Limpia la tabla
o	Itera sobre array de reservas
o	Crea filas din√°micamente con informaci√≥n formateada
o	Aplica badges de color seg√∫n estado
o	Muestra botones de acci√≥n seg√∫n estado actual
o	Formatea fechas a formato espa√±ol (DD/MM/AAAA)
3.	mostrarMensajeVacio():
o	Muestra mensaje cuando no hay reservas
o	Adapta mensaje seg√∫n filtro activo
4.	filtrarReservas(estado):
o	Filtra reservas seg√∫n estado seleccionado
o	Actualiza clases CSS de botones de filtro
o	Llama a mostrarReservas() con array filtrado
5.	confirmarReserva(id):
o	Solicita confirmaci√≥n al usuario
o	Busca reserva por ID usando map()
o	Cambia estado a 'confirmada'
o	Actualiza localStorage
o	Recarga vista y muestra mensaje de √©xito
6.	cancelarReserva(id):
o	Solicita confirmaci√≥n al usuario
o	Busca reserva por ID
o	Cambia estado a 'cancelada'
o	Actualiza localStorage
o	Recarga vista
7.	verDetalles(id):
o	Busca reserva por ID usando find()
o	Formatea toda la informaci√≥n
o	Muestra alert con detalles completos: 
ÔÇß	Datos del hu√©sped
ÔÇß	Informaci√≥n de la reserva
ÔÇß	Solicitudes especiales (si existen)
Estilos CSS (estilos.css)
Variables CSS personalizadas:
--primary-color: #2c3e50
--secondary-color: #95a5a6
--success-color: #27ae60
--warning-color: #f39c12
--danger-color: #e74c3c
Caracter√≠sticas principales:
1.	Layout responsive:
o	Flexbox para estructura vertical
o	Footer sticky en la parte inferior
o	Breakpoints para m√≥viles (@media max-width: 768px)
2.	Placeholders de im√°genes:
o	Gradiente lineal de fallback (135deg, #667eea a #764ba2)
o	Sistema de im√°genes reales con object-fit: cover
o	Alturas fijas para mantener dise√±o consistente
o	Overflow hidden para recorte limpio
3.	Efectos interactivos:
o	Transform translateY(-5px) en hover de cards
o	Transiciones suaves (0.3s ease)
o	Sombras din√°micas que aumentan en hover
o	Botones con efecto elevaci√≥n
4.	Animaciones:
o	@keyframes fadeIn: Aparici√≥n suave de elementos
o	@keyframes spin: Spinner de carga
o	Aplicadas a cards y alerts autom√°ticamente
5.	Componentes estilizados:
o	Cards sin bordes con sombra sutil
o	Navbar con efectos de hover en links
o	Modales con header degradado
o	Badges personalizados por estado
o	Tablas responsive con scroll horizontal
6.	Optimizaci√≥n m√≥vil:
o	Reduce altura de carrusel (300px)
o	Ajusta tama√±o de fuentes
o	Reduce padding de botones peque√±os
o	Tabla con fuente m√°s peque√±a (0.85rem)
Tecnolog√≠as Utilizadas
‚Ä¢	HTML5: Estructura sem√°ntica
‚Ä¢	CSS3: Estilos personalizados y animaciones
‚Ä¢	Bootstrap 5.3.0: Framework CSS responsive
‚Ä¢	JavaScript (ES6): L√≥gica del cliente
‚Ä¢	LocalStorage API: Persistencia de datos local
Caracter√≠sticas T√©cnicas
Persistencia de datos:
‚Ä¢	Usa localStorage del navegador
‚Ä¢	Datos almacenados en formato JSON
‚Ä¢	No requiere backend ni base de datos
Validaciones implementadas:
‚Ä¢	Fechas no pueden ser en el pasado
‚Ä¢	Check-out debe ser posterior a check-in
‚Ä¢	Todos los campos requeridos deben llenarse
‚Ä¢	N√∫mero de hu√©spedes limitado (1-5)
‚Ä¢	Validaci√≥n HTML5 de tipos (email, tel, date)
Responsive Design:
‚Ä¢	Mobile-first approach
‚Ä¢	Breakpoints optimizados
‚Ä¢	Navbar colapsable en m√≥viles
‚Ä¢	Tablas con scroll horizontal
‚Ä¢	Im√°genes adaptativas
Experiencia de Usuario:
‚Ä¢	C√°lculo autom√°tico de precios
‚Ä¢	Resumen visual antes de confirmar
‚Ä¢	Mensajes de confirmaci√≥n claros
‚Ä¢	Estados visuales diferenciados
‚Ä¢	Navegaci√≥n intuitiva entre p√°ginas
‚Ä¢	Botones de acci√≥n contextuales
Limitaciones Conocidas
1.	Almacenamiento local:
o	Los datos solo persisten en el mismo navegador
o	Limpiar cach√© borra todas las reservas
o	No hay sincronizaci√≥n entre dispositivos
2.	Sin backend:
o	No hay verificaci√≥n de disponibilidad real
o	No hay sistema de autenticaci√≥n
o	No se env√≠an emails reales de confirmaci√≥n
3.	Validaciones b√°sicas:
o	No verifica conflictos de fechas entre reservas
o	No limita n√∫mero de reservas por habitaci√≥n
o	No valida formato de tel√©fono espec√≠ficamente
Mejoras Futuras Sugeridas
1.	Integraci√≥n con backend (Node.js, PHP, etc.)
2.	Base de datos para persistencia real
3.	Sistema de autenticaci√≥n de usuarios
4.	Verificaci√≥n de disponibilidad en tiempo real
5.	Pasarela de pago integrada
6.	Env√≠o de emails de confirmaci√≥n
7.	Panel de administraci√≥n
8.	Calendario visual de disponibilidad
9.	Sistema de calificaciones y rese√±as
10.	Multi-idioma
11.	Integraci√≥n con servicios de mapas
12.	Chat de soporte en vivo
Instrucciones de Instalaci√≥n
1.	Descargar todos los archivos del proyecto
2.	Mantener la estructura de carpetas intacta
3.	Colocar im√°genes en las carpetas correspondientes
4.	Abrir index.html en un navegador web moderno
5.	No requiere servidor web (puede ejecutarse localmente)
Navegadores Compatibles
‚Ä¢	Chrome 90+
‚Ä¢	Firefox 88+
‚Ä¢	Safari 14+
‚Ä¢	Edge 90+
‚Ä¢	Opera 76+
Autores y Licencia
Caballero Ramos, Aar√≥n Paul
Castillo Abad, Jhosep
Cueva Guanilo, Aaron Raphael
Hotel Para√≠so - Sistema de Reservas
¬© 2025 Todos los derechos reservados
________________________________________

